{"version":3,"sources":["videoclass.js"],"names":["constructor","id","this","videoplayer","document","querySelector","videocontrols","style","ev","hidecontrolstimeout","setTimeout","clearTimeout","visibility","addEventListener","videocontainer","togglePlay","video","paused","timeconverted","seconds","videolength","hours","minutes","Math","round","duration","progressbar","max","innerHTML","currentTime","videoprogress","currenttimeconverted","secondsTo_hhmmss","time","value","left","offsetWidth","shadowvideo","statecontainer","stateimg","progresscontainer","canvascontext","canvas","getContext","updateProgressBar","pageX","getAbsoluteX","progressDown","cvposition","currentposition","display","videoWidth","timestamp","controls","playpause","drawImage","videoHeight","width","height","muted","volumecontrol","volumeslidercontainer","updateVolume","volume","volumeslider","mouseDown","toggleMute","volumesliderfill","updateVolumeIcon","deltaY","parseFloat","fullscreen","toggleFullScreen","ended","window","offsetParent","element","offsetLeft","sec","src","state","pause","console","fullscreenElement","exitFullscreen","log","requestFullscreen","VideoPlayer","two"],"mappings":"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","file":"videoclass.js","sourcesContent":["/* ------------------------------------------------\r\n       VIDEOPLAYER CLASS\r\n       \r\n-------------------------------------------------*/\r\n\r\nclass VideoPlayer{\r\n    constructor(id){\r\n        //initialize player\r\n        //use queryselector with complete paths\r\n        //to make using multiple players possible\r\n\r\n        /* ------------------------------------------------\r\n            VIDEOPLAYER\r\n            \r\n        -------------------------------------------------*/\r\n        this.videoplayer = document.querySelector(`#${id}`);\r\n\r\n        /* --------------- HIDE OR SHOW CONTROLS --------------------*/\r\n        this.videoplayer.addEventListener('mouseenter', (ev) => {\r\n\r\n            this.videocontrols.style.visibility = \"visible\";\r\n            clearTimeout(this.hidecontrolstimeout);\r\n            this.hidecontrolstimeout = setTimeout(() => {\r\n                this.videocontrols.style.visibility = \"hidden\";\r\n            }, 3000);\r\n        });\r\n\r\n        this.videoplayer.addEventListener('mouseleave', (ev) => {\r\n            this.videocontrols.style.visibility = \"hidden\";\r\n        });\r\n\r\n        this.videoplayer.addEventListener('mousemove', (ev) => {\r\n            this.videocontrols.style.visibility = \"visible\";\r\n            clearTimeout(this.hidecontrolstimeout);\r\n            this.hidecontrolstimeout = setTimeout(() => {\r\n                this.videocontrols.style.visibility = \"hidden\"\r\n            }, 3000);\r\n        });\r\n\r\n\r\n        /* --------------- VIDEOCONTAINER --------------------*/\r\n        this.videocontainer = document.querySelector(`#${id} > .videos`);\r\n\r\n        /* --------------- PLAY/PAUSE --------------------*/\r\n        this.videocontainer.addEventListener('click', (ev) => {\r\n            if(this.video.paused){\r\n                this.togglePlay(\"play\");\r\n            } else {\r\n                this.togglePlay(\"pause\");\r\n            }\r\n        });\r\n\r\n        /* --------------- VIDEO --------------------*/\r\n        this.video = document.querySelector(`#${id} > .videos > .video`);\r\n        //set statevalue for value\r\n        this.video.volume = 0.3;\r\n\r\n        /* --------------- TIME AND PROGRESSBAR --------------------*/\r\n        this.video.addEventListener('loadedmetadata', (ev) => {\r\n            //show time\r\n            let timeconverted = this.secondsTo_hhmmss(Math.round(this.video.duration));\r\n\r\n            let hours = timeconverted[0] ? timeconverted[0] + \":\": \"\";\r\n            let minutes = timeconverted[1] ? timeconverted[1] + \":\": \"\";\r\n            let seconds = (timeconverted[2] < 10 ? \"0\" : \"\") + timeconverted[2];\r\n            this.time.innerHTML = `0:00 / ${hours}${minutes}${seconds}`;\r\n            this.videolength = `${hours}${minutes}${seconds}`;\r\n            //set progressbar\r\n            this.progressbar.max = this.video.duration;\r\n        });\r\n\r\n        this.video.addEventListener('timeupdate', (ev) => {\r\n            this.progressbar.value = this.video.currentTime;\r\n            let videoprogress = this.video.currentTime / this.video.duration;\r\n            this.currentposition.style.left = `${this.progressbar.offsetWidth * videoprogress}px`;\r\n            let currenttimeconverted = this.secondsTo_hhmmss(Math.round(this.video.currentTime));\r\n            let hours = currenttimeconverted[0] ? currenttimeconverted[0] + \":\": \"\";\r\n            let minutes = currenttimeconverted[1] ? currenttimeconverted[1] + \":\": \"0:\";\r\n            let seconds = (currenttimeconverted[2] < 10 ? \"0\" : \"\") + currenttimeconverted[2];\r\n            this.time.innerHTML = `${hours}${minutes}${seconds} / ${this.videolength}`;\r\n        });\r\n\r\n        this.video.addEventListener('ended', (ev) => {\r\n            \r\n        });\r\n\r\n\r\n        /* --------------- SHADOW VIDEO --------------------*/\r\n        //get frames for the preview from this video\r\n        this.shadowvideo = document.querySelector(`#${id} > .videos > .shadow-video`);\r\n\r\n\r\n        /* ------------------------------------------------\r\n            PLAYER ELEMENTS\r\n            \r\n        -------------------------------------------------*/\r\n        /* --------------- VIDEOSTATE  --------------------*/\r\n        this.statecontainer = document.querySelector(`#${id} > .video-state-container`);\r\n        this.stateimg = document.querySelector(`#${id} > .video-state-container > .state-img`);\r\n\r\n\r\n        /* --------------- CANVAS FOR SKIP AHEAD PREVIEW --------------------*/\r\n        this.canvas = document.querySelector(`#${id} > .preview-canvas`);\r\n        this.canvascontext = this.canvas.getContext(\"2d\");\r\n\r\n\r\n        /* --------------- VIDEO CONTROLS --------------------*/\r\n        this.videocontrols = document.querySelector(`#${id} > .video-controls`);\r\n\r\n\r\n        /* ------------------------------------------------\r\n            PROGRESSBAR\r\n            \r\n        -------------------------------------------------*/\r\n        /* --------------- PROGRESSCONTAINER --------------------*/\r\n        this.progresscontainer = document.querySelector(`#${id} > .video-controls > .progress`);\r\n\r\n        /* --------------- SKIP AHEAD --------------------*/\r\n        this.progresscontainer.addEventListener('mousedown', (ev) => {\r\n            let value = ev.pageX - this.getAbsoluteX(this.progressbar);\r\n            this.updateProgressBar(value);\r\n            this.progressDown = true;\r\n        });\r\n\r\n        /* --------------- ShOW/HIDE POSITION DOT AND PREVIEW CANVAS --------------------*/\r\n        this.progresscontainer.addEventListener('mouseenter', (ev) => {\r\n            this.currentposition.style.display = \"block\";\r\n            this.canvas.style.display = \"flex\";\r\n        });\r\n\r\n        this.progresscontainer.addEventListener('mouseleave', (ev) => {\r\n            this.currentposition.style.display = \"none\";\r\n            this.canvas.style.display = \"none\";\r\n        });\r\n\r\n        /* --------------- SKIP AHEAD PREVIEW --------------------*/\r\n        this.progresscontainer.addEventListener('mousemove', (ev) => {\r\n            let value = ev.pageX - this.getAbsoluteX(this.progressbar);\r\n            \r\n            //position canvas\r\n            let cvposition = value - this.canvas.offsetWidth/2; \r\n            cvposition = cvposition < 10 ? 10 : cvposition;\r\n            cvposition = (this.video.videoWidth - cvposition) < 10 + this.canvas.offsetWidth ? this.video.videoWidth - (this.canvas.offsetWidth + 10) : cvposition;\r\n            this.canvas.style.left = `${cvposition}px`;\r\n\r\n            //get frame from shadow video and paint on canvas\r\n            value = value / this.progressbar.offsetWidth; //percent value\r\n            let timestamp = this.video.duration * value;\r\n            this.shadowvideo.currentTime = timestamp;\r\n            this.canvascontext.drawImage(this.shadowvideo, 0, 0, this.video.videoWidth, this.video.videoHeight, 0, 0, this.canvas.width, this.canvas.height);\r\n        });\r\n\r\n        /* --------------- PROGRESSBAR --------------------*/\r\n        this.progressbar = document.querySelector(`#${id} > .video-controls > .progress > .video-progress`);\r\n        this.currentposition = document.querySelector(`#${id} > .video-controls > .progress > .current-position`);\r\n\r\n\r\n        /* --------------- CONTROLS --------------------*/\r\n        this.controls = document.querySelector(`#${id} > .video-controls > .controls`);\r\n\r\n\r\n        /* ------------------------------------------------\r\n            LEFT CONTROLS\r\n        \r\n        -------------------------------------------------*/\r\n        this.playpause = document.querySelector(`#${id} > .video-controls > .controls > .left-controls > .track-controls > .playpause`);\r\n\r\n\r\n        /* --------------- PLAY/PAUSE --------------------*/\r\n        this.playpause.addEventListener('click', (ev) => {\r\n            if(this.video.paused){\r\n                this.togglePlay(\"play\");\r\n            } else {\r\n                this.togglePlay(\"pause\");\r\n            }\r\n        });\r\n\r\n\r\n        /* --------------- VOLUME --------------------*/\r\n        this.volumecontrol = document.querySelector(`#${id} > .video-controls > .controls > .left-controls > .volume-control`);\r\n\r\n        /* --------------- SHOW/HIDE VOLUMESLIDER --------------------*/\r\n        this.volumecontrol.addEventListener('mouseenter', (ev) => {\r\n            this.volumeslidercontainer.style.display = \"flex\";\r\n        });\r\n\r\n        this.volumecontrol.addEventListener('mouseleave', (ev) => {\r\n            this.volumeslidercontainer.style.display = \"none\";\r\n        });\r\n\r\n        /* --------------- MUTE/UNMUTE VIDEO --------------------*/\r\n        this.volume = document.querySelector(`#${id} > .video-controls > .controls > .left-controls > .volume-control > .volume`);\r\n\r\n        this.volume.addEventListener('click', (ev) => {\r\n            if(this.video.muted){\r\n                this.toggleMute(\"unmute\");\r\n            } else {\r\n                this.toggleMute(\"mute\");\r\n            }\r\n        });\r\n\r\n        /* --------------- VOLUMESLIDER CONTAINER --------------------*/\r\n        this.volumeslidercontainer = document.querySelector(`#${id} > .video-controls > .controls > .left-controls > .volume-control > .volume-slider-container`);\r\n\r\n        /* --------------- VOLUMESLIDER --------------------*/\r\n        this.volumeslider = document.querySelector(`#${id} > .video-controls > .controls > .left-controls > .volume-control > .volume-slider-container > .volume-slider`);\r\n\r\n        /* --------------- CHANGE VOLUME --------------------*/\r\n        //click\r\n        this.volumeslider.addEventListener('mousedown', (ev) => {\r\n            let value = ev.pageX - this.getAbsoluteX(this.volumeslider);\r\n            value = value * 2;\r\n            this.updateVolume(value);\r\n        });\r\n        //slide\r\n        this.volumeslider.addEventListener('mousemove', (ev) => {\r\n            if(this.mouseDown){\r\n                let value = ev.pageX - this.getAbsoluteX(this.volumeslider);\r\n                value = value * 2;\r\n                this.updateVolume(value);\r\n            }\r\n        });\r\n        //scroll\r\n        this.volumeslider.addEventListener('wheel', (ev) => {\r\n            if(ev.deltaY < 0){\r\n                this.volumeslider.value = parseFloat(this.volumeslider.value) + 10;\r\n            } else {\r\n                this.volumeslider.value = this.volumeslider.value - 10;\r\n            }\r\n            this.video.volume = this.volumeslider.value/100;\r\n            this.volumesliderfill.style.width = `${this.volumeslider.value/2}px`;\r\n            updateVolumeIcon(this.volumeslider.value);\r\n        })\r\n\r\n        /* --------------- VOLUMESLIDER FILL --------------------*/\r\n        this.volumesliderfill = document.querySelector(`#${id} > .video-controls > .controls > .left-controls > .volume-control > .volume-slider-container > .volume-slider-fill`);\r\n\r\n\r\n        /* --------------- TIME --------------------*/\r\n        this.time = document.querySelector(`#${id} > .video-controls > .controls > .left-controls > .time > .time-span`);\r\n\r\n        /* ------------------------------------------------\r\n            RIGHT CONTROLS\r\n            \r\n        -------------------------------------------------*/\r\n        /* --------------- FULLSCREEN --------------------*/\r\n        this.fullscreen = document.querySelector(`#${id} > .video-controls > .controls > .right-controls > .screen-modes > .fullscreen`);\r\n\r\n        /* --------------- TOGGLE FULLSCREEN --------------------*/\r\n        this.fullscreen.addEventListener('click', (ev) => {\r\n            this.toggleFullScreen();\r\n        });\r\n\r\n        /* --------------- STATE VARIABLES --------------------*/\r\n        this.mouseDown = false;\r\n        this.progressDown = false;\r\n        this.hidecontrolstimeout;\r\n        this.videolength;\r\n\r\n        /* --------------- DOCUMENT --------------------*/\r\n        /* --------------- SET STATE VARIABLE --------------------*/\r\n\r\n        document.addEventListener('mousedown', () => { \r\n            this.mouseDown = true;\r\n        });\r\n\r\n        /* --------------- \r\n        RESET STATE VARIABLES + \r\n        CONTINUE PLAYING AFTER DRAG OF POSITIONDOT\r\n        --------------------*/\r\n        document.addEventListener('mouseup', () => {    \r\n            if(this.progressDown && !this.video.ended){\r\n                this.togglePlay(\"play\");\r\n            }\r\n            this.mouseDown = false;\r\n            this.progressDown = false;\r\n        });\r\n\r\n        /* --------------- UPDATE PROGRESSBAR --------------------*/\r\n        //if drag started on progressbar continue on document\r\n        document.addEventListener('mousemove', (ev) => {\r\n            if(this.progressDown){\r\n                if(!this.video.paused){\r\n                    this.togglePlay(\"pause\");\r\n                }\r\n                this.currentposition.style.display = \"block\";\r\n                let value = ev.pageX - this.getAbsoluteX(this.progressbar);\r\n                this.updateProgressBar(value);\r\n            }\r\n        });\r\n\r\n        /* --------------- WINDOW --------------------*/\r\n        //if drag of positiondot release it on cursor moving out of window\r\n        window.addEventListener('mouseleave', (ev) => {\r\n            if(ev.toElement == null){\r\n                this.mouseDown = false;\r\n                if(this.progressDown && !this.video.ended){\r\n                    this.togglePlay(\"play\");\r\n                }\r\n                this.progressDown = false;\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /* --------------- HELPERS --------------------*/\r\n    getAbsoluteX(element){\r\n        if(element == document.body){//be carefull if margin/padding of body is not 0\r\n            return 0;\r\n        } else if(element.offsetParent == null){//fulscreen\r\n            return 0;\r\n        } else {\r\n            return this.getAbsoluteX(element.offsetParent) + element.offsetLeft;\r\n        }\r\n    }\r\n\r\n    secondsTo_hhmmss(sec){\r\n        let minutes = (sec - (sec % 60)) / 60;\r\n        let seconds = sec % 60;\r\n        let hours = (minutes - (minutes % 60)) / 60;\r\n        minutes = minutes % 60;\r\n        return [hours, minutes, seconds]\r\n    }\r\n\r\n\r\n    /* --------------- UPDATEVOLUME --------------------*/\r\n    //value between 0 - 100\r\n    updateVolume(value){\r\n        //normalize\r\n        value = value < 0 ? 0 : value;\r\n        value = value > 100 ? 100 : value;\r\n\r\n        //set volume of video\r\n        this.video.volume = value/100;\r\n        \r\n        //gui\r\n        updateVolumeIcon(value);\r\n        this.volumeslider.value = value;\r\n        this.volumesliderfill.style.width = `${this.volumeslider.value/2}px`;\r\n    }\r\n\r\n    updateVolumeIcon(value){\r\n        if(value > 50){\r\n            this.volume.src = \"img/volumeloud.svg\";\r\n            this.video.muted = false;\r\n        } else if(value > 0) {\r\n            this.volume.src = \"img/volumelow.svg\";\r\n            this.video.muted = false;\r\n        } else {//0\r\n            this.volume.src = \"img/muted.svg\";\r\n        }\r\n    }\r\n\r\n\r\n    /* --------------- UPDATEPROGRESSBAR --------------------*/\r\n    //value between 0 and the width of the progressbar\r\n    updateProgressBar(value){\r\n        //normalize\r\n        value = value < 0 ? 0 : value;\r\n        value = value > this.progressbar.offsetWidth ? this.progressbar.offsetWidth : value;\r\n\r\n        //set positon of red dot\r\n        this.currentposition.style.left = `${value}px`;\r\n        \r\n        value = value / this.progressbar.offsetWidth; //percent value\r\n        //set progressbarvalue and videotime\r\n        this.video.currentTime = this.video.duration * value;\r\n        this.progressbar.value = this.progressbar.max * value;\r\n    }\r\n\r\n\r\n    /* --------------- TOGGLEPLAY --------------------*/\r\n    //stop/start playing\r\n    togglePlay(state){//play or pause\r\n        if(state == \"play\"){\r\n            this.video.play();\r\n            //gui\r\n            this.playpause.src = \"img/pause.svg\";\r\n            this.stateimg.src = \"img/pause.svg\";\r\n            this.statecontainer.style.display = \"block\";\r\n            setTimeout(() => {\r\n                this.statecontainer.style.display = \"none\";\r\n            }, 500);\r\n\r\n        } else {\r\n            this.video.pause();\r\n            //gui\r\n            this.playpause.src = \"img/play.svg\";\r\n            this.stateimg.src = \"img/play.svg\";\r\n            this.statecontainer.style.display = \"block\";\r\n            setTimeout(() => {\r\n                this.statecontainer.style.display = \"none\";\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n\r\n    /* --------------- TOGGLEMUTE --------------------*/\r\n    toggleMute(state){//mute or unmute\r\n        if(state == \"unmute\"){\r\n            this.video.muted = false;\r\n            this.volume.src = \"img/volumeloud.svg\";\r\n        } else {\r\n            this.video.muted = true;\r\n            this.volume.src = \"img/muted.svg\";\r\n        }\r\n    }\r\n\r\n\r\n    /* --------------- TOGGLEFULLSCREEN --------------------*/\r\n    toggleFullScreen(){\r\n        if(document.fullscreenElement == this.videoplayer){\r\n            document.exitFullscreen();\r\n            this.fullscreen.src = \"img/enterfullscreen.svg\";\r\n        } else {\r\n            console.log(this);\r\n            console.log(this.videoplayer);\r\n            this.videoplayer.requestFullscreen();\r\n            this.fullscreen.src = \"img/leavefullscreen.svg\";\r\n        }\r\n    }\r\n}\r\n\r\nvar videoplayer = new VideoPlayer(\"one\");\r\nvar two = new VideoPlayer(\"two\");"]}