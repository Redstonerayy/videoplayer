{"version":3,"sources":["videoclass.js"],"names":["constructor","id","this","videoplayer","document","querySelector","videocontrols","style","ev","clearTimeout","hidecontrolstimeout","visibility","addEventListener","mouseovercontrols","setTimeout","videocontainer","togglePlay","paused","video","hours","timeconverted","seconds","secondsTo_hhmmss","Math","duration","videolength","minutes","progressbar","time","innerHTML","videoprogress","max","currentTime","currenttimeconverted","offsetWidth","round","stateimg","statecontainer","canvascontext","canvas","getContext","progresscontainer","value","getAbsoluteX","currentposition","display","updateProgressBar","progressDown","cvposition","pageX","videoWidth","controls","timestamp","shadowvideo","playpause","videoHeight","width","height","volumecontrol","volumeslider","volumesliderfill","volumeslidercontainer","deltaY","parseFloat","toggleMute","volume","updateVolume","muted","mouseDown","fullscreen","toggleFullScreen","undefined","ended","window","toElement","element","offsetParent","body","offsetLeft","sec","updateVolumeIcon","src","left","state","statecontainerhide","pause","play","clearInterval","requestFullscreen","fullscreenElement","exitFullscreen","VideoPlayer","two","console","log"],"mappings":"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","file":"videoclass.js","sourcesContent":["/* ------------------------------------------------\r\n       VIDEOPLAYER CLASS\r\n       \r\n-------------------------------------------------*/\r\n\r\nclass VideoPlayer{\r\n    constructor(id){\r\n        //initialize player\r\n        //use queryselector with complete paths\r\n        //to make using multiple players possible\r\n\r\n        /* ------------------------------------------------\r\n            VIDEOPLAYER\r\n            \r\n        -------------------------------------------------*/\r\n        this.videoplayer = document.querySelector(`#${id}`);\r\n\r\n        /* --------------- HIDE OR SHOW CONTROLS --------------------*/\r\n        this.videoplayer.addEventListener('mouseenter', (ev) => {\r\n            this.videocontrols.style.visibility = \"visible\";\r\n            clearTimeout(this.hidecontrolstimeout);\r\n            this.hidecontrolstimeout = setTimeout(() => {\r\n                this.videocontrols.style.visibility = \"hidden\";\r\n            }, 3000);\r\n        });\r\n\r\n        this.videoplayer.addEventListener('mouseleave', (ev) => {\r\n            this.videocontrols.style.visibility = \"hidden\";\r\n        });\r\n\r\n        this.videoplayer.addEventListener('mousemove', (ev) => {\r\n            this.videocontrols.style.visibility = \"visible\";\r\n            clearTimeout(this.hidecontrolstimeout);\r\n            if(!this.mouseovercontrols){\r\n                this.hidecontrolstimeout = setTimeout(() => {\r\n                    this.videocontrols.style.visibility = \"hidden\"\r\n                }, 3000);\r\n            }\r\n        });\r\n\r\n\r\n        /* --------------- VIDEOCONTAINER --------------------*/\r\n        this.videocontainer = document.querySelector(`#${id} > .videos`);\r\n\r\n        /* --------------- PLAY/PAUSE --------------------*/\r\n        this.videocontainer.addEventListener('click', (ev) => {\r\n            if(this.video.paused){\r\n                this.togglePlay(\"play\");\r\n            } else {\r\n                this.togglePlay(\"pause\");\r\n            }\r\n        });\r\n\r\n        /* --------------- VIDEO --------------------*/\r\n        this.video = document.querySelector(`#${id} > .videos > .video`);\r\n        //set statevalue for value\r\n        this.video.volume = 0.3;\r\n\r\n        /* --------------- TIME AND PROGRESSBAR --------------------*/\r\n        this.video.addEventListener('loadedmetadata', (ev) => {\r\n            //show time\r\n            let timeconverted = this.secondsTo_hhmmss(Math.round(this.video.duration));\r\n\r\n            let hours = timeconverted[0] ? timeconverted[0] + \":\": \"\";\r\n            let minutes = timeconverted[1] ? timeconverted[1] + \":\": \"\";\r\n            let seconds = (timeconverted[2] < 10 ? \"0\" : \"\") + timeconverted[2];\r\n            this.time.innerHTML = `0:00 / ${hours}${minutes}${seconds}`;\r\n            this.videolength = `${hours}${minutes}${seconds}`;\r\n            //set progressbar\r\n            this.progressbar.max = this.video.duration;\r\n        });\r\n\r\n        this.video.addEventListener('timeupdate', (ev) => {\r\n            this.progressbar.value = this.video.currentTime;\r\n            let videoprogress = this.video.currentTime / this.video.duration;\r\n            this.currentposition.style.left = `${this.progressbar.offsetWidth * videoprogress}px`;\r\n            let currenttimeconverted = this.secondsTo_hhmmss(Math.round(this.video.currentTime));\r\n            let hours = currenttimeconverted[0] ? currenttimeconverted[0] + \":\": \"\";\r\n            let minutes = currenttimeconverted[1] ? currenttimeconverted[1] + \":\": \"0:\";\r\n            let seconds = (currenttimeconverted[2] < 10 ? \"0\" : \"\") + currenttimeconverted[2];\r\n            this.time.innerHTML = `${hours}${minutes}${seconds} / ${this.videolength}`;\r\n        });\r\n\r\n        this.video.addEventListener('ended', (ev) => {\r\n            \r\n        });\r\n\r\n\r\n        /* --------------- SHADOW VIDEO --------------------*/\r\n        //get frames for the preview from this video\r\n        this.shadowvideo = document.querySelector(`#${id} > .videos > .shadow-video`);\r\n\r\n\r\n        /* ------------------------------------------------\r\n            PLAYER ELEMENTS\r\n            \r\n        -------------------------------------------------*/\r\n        /* --------------- VIDEOSTATE  --------------------*/\r\n        this.statecontainer = document.querySelector(`#${id} > .video-state-container`);\r\n        this.stateimg = document.querySelector(`#${id} > .video-state-container > .state-img`);\r\n\r\n\r\n        /* --------------- CANVAS FOR SKIP AHEAD PREVIEW --------------------*/\r\n        this.canvas = document.querySelector(`#${id} > .preview-canvas`);\r\n        this.canvascontext = this.canvas.getContext(\"2d\");\r\n\r\n\r\n        /* --------------- VIDEO CONTROLS --------------------*/\r\n        this.videocontrols = document.querySelector(`#${id} > .video-controls`);\r\n\r\n        //prevent hide if mouse is over it\r\n        this.videocontrols.addEventListener('mouseenter', (ev) => {\r\n            this.mouseovercontrols = true;\r\n        });\r\n\r\n        this.videocontrols.addEventListener('mouseleave', (ev) => {\r\n            this.mouseovercontrols = false;\r\n        });\r\n\r\n        /* ------------------------------------------------\r\n            PROGRESSBAR\r\n            \r\n        -------------------------------------------------*/\r\n        /* --------------- PROGRESSCONTAINER --------------------*/\r\n        this.progresscontainer = document.querySelector(`#${id} > .video-controls > .progress`);\r\n\r\n        /* --------------- SKIP AHEAD --------------------*/\r\n        this.progresscontainer.addEventListener('mousedown', (ev) => {\r\n            let value = ev.pageX - this.getAbsoluteX(this.progressbar);\r\n            this.updateProgressBar(value);\r\n            this.progressDown = true;\r\n        });\r\n\r\n        /* --------------- ShOW/HIDE POSITION DOT AND PREVIEW CANVAS --------------------*/\r\n        this.progresscontainer.addEventListener('mouseenter', (ev) => {\r\n            this.currentposition.style.display = \"block\";\r\n            this.canvas.style.display = \"flex\";\r\n        });\r\n\r\n        this.progresscontainer.addEventListener('mouseleave', (ev) => {\r\n            this.currentposition.style.display = \"none\";\r\n            this.canvas.style.display = \"none\";\r\n        });\r\n\r\n        /* --------------- SKIP AHEAD PREVIEW --------------------*/\r\n        this.progresscontainer.addEventListener('mousemove', (ev) => {\r\n            let value = ev.pageX - this.getAbsoluteX(this.progressbar);\r\n            \r\n            //position canvas\r\n            let cvposition = value - this.canvas.offsetWidth/2; \r\n            cvposition = cvposition < 10 ? 10 : cvposition;\r\n            cvposition = (this.video.videoWidth - cvposition) < 10 + this.canvas.offsetWidth ? this.video.videoWidth - (this.canvas.offsetWidth + 10) : cvposition;\r\n            this.canvas.style.left = `${cvposition}px`;\r\n\r\n            //get frame from shadow video and paint on canvas\r\n            value = value / this.progressbar.offsetWidth; //percent value\r\n            let timestamp = this.video.duration * value;\r\n            this.shadowvideo.currentTime = timestamp;\r\n            this.canvascontext.drawImage(this.shadowvideo, 0, 0, this.video.videoWidth, this.video.videoHeight, 0, 0, this.canvas.width, this.canvas.height);\r\n        });\r\n\r\n        /* --------------- PROGRESSBAR --------------------*/\r\n        this.progressbar = document.querySelector(`#${id} > .video-controls > .progress > .video-progress`);\r\n        this.currentposition = document.querySelector(`#${id} > .video-controls > .progress > .current-position`);\r\n\r\n\r\n        /* --------------- CONTROLS --------------------*/\r\n        this.controls = document.querySelector(`#${id} > .video-controls > .controls`);\r\n\r\n\r\n        /* ------------------------------------------------\r\n            LEFT CONTROLS\r\n        \r\n        -------------------------------------------------*/\r\n        this.playpause = document.querySelector(`#${id} > .video-controls > .controls > .left-controls > .track-controls > .playpause`);\r\n\r\n\r\n        /* --------------- PLAY/PAUSE --------------------*/\r\n        this.playpause.addEventListener('click', (ev) => {\r\n            if(this.video.paused){\r\n                this.togglePlay(\"play\");\r\n            } else {\r\n                this.togglePlay(\"pause\");\r\n            }\r\n        });\r\n\r\n\r\n        /* --------------- VOLUME --------------------*/\r\n        this.volumecontrol = document.querySelector(`#${id} > .video-controls > .controls > .left-controls > .volume-control`);\r\n\r\n        /* --------------- CHANGE VOLUME --------------------*/\r\n        //scroll\r\n        this.volumecontrol.addEventListener('wheel', (ev) => {\r\n            if(ev.deltaY < 0){\r\n                this.volumeslider.value = parseFloat(this.volumeslider.value) + 10;\r\n            } else {\r\n                this.volumeslider.value = this.volumeslider.value - 10;\r\n            }\r\n            this.video.volume = this.volumeslider.value/100;\r\n            this.volumesliderfill.style.width = `${this.volumeslider.value/2}px`;\r\n            this.updateVolumeIcon(this.volumeslider.value);\r\n        })\r\n\r\n        /* --------------- SHOW/HIDE VOLUMESLIDER --------------------*/\r\n        this.volumecontrol.addEventListener('mouseenter', (ev) => {\r\n            this.volumeslidercontainer.style.display = \"flex\";\r\n        });\r\n\r\n        this.volumecontrol.addEventListener('mouseleave', (ev) => {\r\n            this.volumeslidercontainer.style.display = \"none\";\r\n        });\r\n\r\n        /* --------------- MUTE/UNMUTE VIDEO --------------------*/\r\n        this.volume = document.querySelector(`#${id} > .video-controls > .controls > .left-controls > .volume-control > .volume`);\r\n\r\n        this.volume.addEventListener('click', (ev) => {\r\n            if(this.video.muted){\r\n                this.toggleMute(\"unmute\");\r\n            } else {\r\n                this.toggleMute(\"mute\");\r\n            }\r\n        });\r\n\r\n        /* --------------- VOLUMESLIDER CONTAINER --------------------*/\r\n        this.volumeslidercontainer = document.querySelector(`#${id} > .video-controls > .controls > .left-controls > .volume-control > .volume-slider-container`);\r\n\r\n        /* --------------- VOLUMESLIDER --------------------*/\r\n        this.volumeslider = document.querySelector(`#${id} > .video-controls > .controls > .left-controls > .volume-control > .volume-slider-container > .volume-slider`);\r\n\r\n        /* --------------- CHANGE VOLUME --------------------*/\r\n        //click\r\n        this.volumeslider.addEventListener('mousedown', (ev) => {\r\n            let value = ev.pageX - this.getAbsoluteX(this.volumeslider);\r\n            value = value * 2;\r\n            this.updateVolume(value);\r\n        });\r\n        //slide\r\n        this.volumeslider.addEventListener('mousemove', (ev) => {\r\n            if(this.mouseDown){\r\n                let value = ev.pageX - this.getAbsoluteX(this.volumeslider);\r\n                value = value * 2;\r\n                this.updateVolume(value);\r\n            }\r\n        });\r\n\r\n        /* --------------- VOLUMESLIDER FILL --------------------*/\r\n        this.volumesliderfill = document.querySelector(`#${id} > .video-controls > .controls > .left-controls > .volume-control > .volume-slider-container > .volume-slider-fill`);\r\n\r\n\r\n        /* --------------- TIME --------------------*/\r\n        this.time = document.querySelector(`#${id} > .video-controls > .controls > .left-controls > .time > .time-span`);\r\n\r\n        /* ------------------------------------------------\r\n            RIGHT CONTROLS\r\n            \r\n        -------------------------------------------------*/\r\n        /* --------------- FULLSCREEN --------------------*/\r\n        this.fullscreen = document.querySelector(`#${id} > .video-controls > .controls > .right-controls > .screen-modes > .fullscreen`);\r\n\r\n        /* --------------- TOGGLE FULLSCREEN --------------------*/\r\n        this.fullscreen.addEventListener('click', (ev) => {\r\n            this.toggleFullScreen();\r\n        });\r\n\r\n        /* --------------- STATE VARIABLES --------------------*/\r\n        this.mouseDown = false;\r\n        this.progressDown = false;\r\n        this.hidecontrolstimeout = undefined;\r\n        this.videolength = undefined;\r\n\r\n        /* --------------- DOCUMENT --------------------*/\r\n        /* --------------- SET STATE VARIABLE --------------------*/\r\n\r\n        document.addEventListener('mousedown', () => { \r\n            this.mouseDown = true;\r\n        });\r\n\r\n        /* --------------- \r\n        RESET STATE VARIABLES + \r\n        CONTINUE PLAYING AFTER DRAG OF POSITIONDOT\r\n        --------------------*/\r\n        document.addEventListener('mouseup', () => {    \r\n            if(this.progressDown && !this.video.ended){\r\n                this.togglePlay(\"play\");\r\n            }\r\n            this.mouseDown = false;\r\n            this.progressDown = false;\r\n        });\r\n\r\n        /* --------------- UPDATE PROGRESSBAR --------------------*/\r\n        //if drag started on progressbar continue on document\r\n        document.addEventListener('mousemove', (ev) => {\r\n            if(this.progressDown){\r\n                if(!this.video.paused){\r\n                    this.togglePlay(\"pause\");\r\n                }\r\n                this.currentposition.style.display = \"block\";\r\n                let value = ev.pageX - this.getAbsoluteX(this.progressbar);\r\n                this.updateProgressBar(value);\r\n            }\r\n        });\r\n        \r\n        /* --------------- WINDOW --------------------*/\r\n        //if drag of positiondot release it on cursor moving out of window\r\n        window.addEventListener('mouseleave', (ev) => {\r\n            if(ev.toElement == null){\r\n                this.mouseDown = false;\r\n                if(this.progressDown && !this.video.ended){\r\n                    this.togglePlay(\"play\");\r\n                }\r\n                this.progressDown = false;\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /* --------------- HELPERS --------------------*/\r\n    getAbsoluteX(element){\r\n        if(element == document.body){//be carefull if margin/padding of body is not 0\r\n            return 0;\r\n        } else if(element.offsetParent == null){//fulscreen\r\n            return 0;\r\n        } else {\r\n            return this.getAbsoluteX(element.offsetParent) + element.offsetLeft;\r\n        }\r\n    }\r\n\r\n    secondsTo_hhmmss(sec){\r\n        let minutes = (sec - (sec % 60)) / 60;\r\n        let seconds = sec % 60;\r\n        let hours = (minutes - (minutes % 60)) / 60;\r\n        minutes = minutes % 60;\r\n        return [hours, minutes, seconds]\r\n    }\r\n\r\n\r\n    /* --------------- UPDATEVOLUME --------------------*/\r\n    //value between 0 - 100\r\n    updateVolume(value){\r\n        //normalize\r\n        value = value < 0 ? 0 : value;\r\n        value = value > 100 ? 100 : value;\r\n\r\n        //set volume of video\r\n        this.video.volume = value/100;\r\n        \r\n        //gui\r\n        this.updateVolumeIcon(value);\r\n        this.volumeslider.value = value;\r\n        this.volumesliderfill.style.width = `${this.volumeslider.value/2}px`;\r\n    }\r\n\r\n    updateVolumeIcon(value){\r\n        if(value > 50){\r\n            this.volume.src = \"img/volumeloud.svg\";\r\n            this.video.muted = false;\r\n        } else if(value > 0) {\r\n            this.volume.src = \"img/volumelow.svg\";\r\n            this.video.muted = false;\r\n        } else {//0\r\n            this.volume.src = \"img/muted.svg\";\r\n        }\r\n    }\r\n\r\n\r\n    /* --------------- UPDATEPROGRESSBAR --------------------*/\r\n    //value between 0 and the width of the progressbar\r\n    updateProgressBar(value){\r\n        //normalize\r\n        value = value < 0 ? 0 : value;\r\n        value = value > this.progressbar.offsetWidth ? this.progressbar.offsetWidth : value;\r\n\r\n        //set positon of red dot\r\n        this.currentposition.style.left = `${value}px`;\r\n        \r\n        value = value / this.progressbar.offsetWidth; //percent value\r\n        //set progressbarvalue and videotime\r\n        this.video.currentTime = this.video.duration * value;\r\n        this.progressbar.value = this.progressbar.max * value;\r\n    }\r\n\r\n\r\n    /* --------------- TOGGLEPLAY --------------------*/\r\n    //stop/start playing\r\n    togglePlay(state){//play or pause\r\n        if(state == \"play\"){\r\n            this.video.play();\r\n            //gui\r\n            this.playpause.src = \"img/pause.svg\";\r\n            this.stateimg.src = \"img/pause.svg\";\r\n            this.statecontainer.style.display = \"block\";\r\n            this.statecontainerhide = setTimeout(() => {\r\n                this.statecontainer.style.display = \"none\";\r\n            }, 500);\r\n\r\n            this.videocontrols.style.visibility = \"visible\";\r\n            this.hidecontrolstimeout = setTimeout(() => {\r\n                this.videocontrols.style.visibility = \"hidden\";                \r\n            }, 3000);\r\n        } else {\r\n            this.video.pause();\r\n            //gui\r\n            this.playpause.src = \"img/play.svg\";\r\n            this.stateimg.src = \"img/play.svg\";\r\n            this.statecontainer.style.display = \"block\";\r\n            this.statecontainerhide = setTimeout(() => {\r\n                this.statecontainer.style.display = \"none\";\r\n            }, 500);\r\n\r\n            this.videocontrols.style.visibility = \"visible\";\r\n            clearInterval(this.hidecontrolstimeout);\r\n            this.hidecontrolstimeout = null;\r\n        }\r\n    }\r\n\r\n\r\n    /* --------------- TOGGLEMUTE --------------------*/\r\n    toggleMute(state){//mute or unmute\r\n        if(state == \"unmute\"){\r\n            this.video.muted = false;\r\n            this.volume.src = \"img/volumeloud.svg\";\r\n        } else {\r\n            this.video.muted = true;\r\n            this.volume.src = \"img/muted.svg\";\r\n        }\r\n    }\r\n\r\n\r\n    /* --------------- TOGGLEFULLSCREEN --------------------*/\r\n    toggleFullScreen(){\r\n        if(document.fullscreenElement == this.videoplayer){\r\n            document.exitFullscreen();\r\n            this.fullscreen.src = \"img/enterfullscreen.svg\";\r\n        } else {\r\n            this.videoplayer.requestFullscreen();\r\n            this.fullscreen.src = \"img/leavefullscreen.svg\";\r\n        }\r\n    }\r\n}\r\n\r\nvar videoplayer = new VideoPlayer(\"one\");\r\nvar two = new VideoPlayer(\"two\");\r\n\r\ndocument.addEventListener('dragstart', (ev) => {\r\n    console.log(ev);\r\n})"]}