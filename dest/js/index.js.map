{"version":3,"sources":["index.js"],"names":["getAbsoluteX","element","document","offsetParent","offsetLeft","secondsTo_hhmmss","sec","minutes","seconds","updateVolume","value","updateVolumeIcon","volumeslider","style","src","volume","muted","updateProgressBar","progressbar","offsetWidth","currentposition","left","video","currentTime","duration","max","togglePlay","state","play","stateimg","pause","playpause","display","statecontainer","setTimeout","toggleMute","toggleFullScreen","ev","fullscreenElement","videoplayer","fullscreen","requestFullscreen","querySelector","videocontrols","visibility","clearTimeout","hidecontrolstimeout","addEventListener","videocontainer","paused","timeconverted","Math","round","innerHTML","hours","videolength","videoprogress","currenttimeconverted","shadow","canvas","canvascontext","getContext","progresscontainer","cvposition","videoWidth","timestamp","controls","drawImage","videoHeight","width","height","volumecontrol","volumeslidercontainer","parseFloat","pageX","volumesliderfill","deltaY","mouseDown","progressDown","onmousedown","ended","window","console","log"],"mappings":"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","file":"index.js","sourcesContent":["/* ------------------------------------------------\r\n       FUNCTIONS\r\n       \r\n-------------------------------------------------*/\r\n/* --------------- HELPERS --------------------*/\r\nconst getAbsoluteX = (element) => {\r\n    if(element == document.body){//be carefull if margin/padding of body is not 0\r\n        return 0;\r\n    } else if(element.offsetParent == null){//fulscreen\r\n        return 0;\r\n    } else {\r\n        return getAbsoluteX(element.offsetParent) + element.offsetLeft;\r\n    }\r\n}\r\n\r\nconst secondsTo_hhmmss = (sec) => {\r\n    let minutes = (sec - (sec % 60)) / 60;\r\n    let seconds = sec % 60;\r\n    let hours = (minutes - (minutes % 60)) / 60;\r\n    minutes = minutes % 60;\r\n    return [hours, minutes, seconds]\r\n}\r\n\r\n\r\n/* --------------- UPDATEVOLUME --------------------*/\r\n//value between 0 - 100\r\nfunction updateVolume(value) {\r\n    //normalize\r\n    value = value < 0 ? 0 : value;\r\n    value = value > 100 ? 100 : value;\r\n\r\n    //set volume of video\r\n    video.volume = value/100;\r\n    \r\n    //gui\r\n    updateVolumeIcon(value);\r\n    volumeslider.value = value;\r\n    volumesliderfill.style.width = `${volumeslider.value/2}px`;\r\n}\r\n\r\nfunction updateVolumeIcon(value){\r\n    if(value > 50){\r\n        volume.src = \"img/volumeloud.svg\";\r\n        video.muted = false;\r\n    } else if(value > 0) {\r\n        volume.src = \"img/volumelow.svg\";\r\n        video.muted = false;\r\n    } else {//0\r\n        volume.src = \"img/muted.svg\";\r\n    }\r\n}\r\n\r\n\r\n/* --------------- UPDATEPROGRESSBAR --------------------*/\r\n//value between 0 and the width of the progressbar\r\nfunction updateProgressBar(value) {\r\n    //normalize\r\n    value = value < 0 ? 0 : value;\r\n    value = value > progressbar.offsetWidth ? progressbar.offsetWidth : value;\r\n\r\n    //set positon of red dot\r\n    currentposition.style.left = `${value}px`;\r\n    \r\n    value = value / progressbar.offsetWidth; //percent value\r\n    //set progressbarvalue and videotime\r\n    video.currentTime = video.duration * value;\r\n    progressbar.value = progressbar.max * value;\r\n}\r\n\r\n\r\n/* --------------- TOGGLEPLAY --------------------*/\r\n//stop/start playing\r\nconst togglePlay = (state) => {//play or pause\r\n    if(state == \"play\"){\r\n        video.play();\r\n        //gui\r\n        playpause.src = \"img/pause.svg\";\r\n        stateimg.src = \"img/pause.svg\";\r\n        statecontainer.style.display = \"block\";\r\n        setTimeout(() => {\r\n            statecontainer.style.display = \"none\";\r\n        }, 500);\r\n\r\n    } else {\r\n        video.pause();\r\n        //gui\r\n        playpause.src = \"img/play.svg\";\r\n        stateimg.src = \"img/play.svg\";\r\n        statecontainer.style.display = \"block\";\r\n        setTimeout(() => {\r\n            statecontainer.style.display = \"none\";\r\n        }, 500);\r\n    }\r\n}\r\n\r\n\r\n/* --------------- TOGGLEMUTE --------------------*/\r\nconst toggleMute = (state) => {//mute or unmute\r\n    if(state == \"unmute\"){\r\n        video.muted = false;\r\n        volume.src = \"img/volumeloud.svg\";\r\n    } else {\r\n        video.muted = true;\r\n        volume.src = \"img/muted.svg\";\r\n    }\r\n}\r\n\r\n\r\n/* --------------- TOGGLEFULLSCREEN --------------------*/\r\nconst toggleFullScreen = (ev) => {\r\n    if(document.fullscreenElement == videoplayer){\r\n        document.exitFullscreen();\r\n        fullscreen.src = \"img/enterfullscreen.svg\";\r\n    } else {\r\n        videoplayer.requestFullscreen();\r\n        fullscreen.src = \"img/leavefullscreen.svg\";\r\n    }\r\n};\r\n\r\n\r\n/* ------------------------------------------------\r\n       MAIN\r\n       \r\n-------------------------------------------------*/\r\n/* ------------------------------------------------\r\n       VIDEOPLAYER\r\n       \r\n-------------------------------------------------*/\r\nvar videoplayer = document.querySelector(\".videoplayer\");\r\n\r\n/* --------------- HIDE OR SHOW CONTROLS --------------------*/\r\nvideoplayer.addEventListener('mouseenter', (ev) => {\r\n    videocontrols.style.visibility = \"visible\";\r\n    clearTimeout(hidecontrolstimeout);\r\n    hidecontrolstimeout = setTimeout(() => {\r\n        videocontrols.style.visibility = \"hidden\";\r\n    }, 3000);\r\n});\r\n\r\nvideoplayer.addEventListener('mouseleave', (ev) => {\r\n    videocontrols.style.visibility = \"hidden\";\r\n});\r\n\r\nvideoplayer.addEventListener('mousemove', (ev) => {\r\n    videocontrols.style.visibility = \"visible\";\r\n    clearTimeout(hidecontrolstimeout);\r\n    hidecontrolstimeout = setTimeout(() => {\r\n        videocontrols.style.visibility = \"hidden\"\r\n    }, 3000);\r\n});\r\n\r\n\r\n/* --------------- VIDEOCONTAINER --------------------*/\r\nvar videocontainer = document.querySelector(\".videos\");\r\n\r\n/* --------------- PLAY/PAUSE --------------------*/\r\nvideocontainer.addEventListener('click', (ev) => {\r\n    if(video.paused){\r\n        togglePlay(\"play\");\r\n    } else {\r\n        togglePlay(\"pause\");\r\n    }\r\n});\r\n\r\n/* --------------- VIDEO --------------------*/\r\nvar video = document.querySelector(\".video\");\r\n//set statevalue for value\r\nvideo.volume = 0.3;\r\n\r\n/* --------------- TIME AND PROGRESSBAR --------------------*/\r\nvideo.addEventListener('loadedmetadata', () => {\r\n    //show time\r\n    let timeconverted = secondsTo_hhmmss(Math.round(video.duration));\r\n\r\n    let hours = timeconverted[0] ? timeconverted[0] + \":\": \"\";\r\n    let minutes = timeconverted[1] ? timeconverted[1] + \":\": \"\";\r\n    let seconds = (timeconverted[2] < 10 ? \"0\" : \"\") + timeconverted[2];\r\n    time.innerHTML = `0:00 / ${hours}${minutes}${seconds}`;\r\n    videolength = `${hours}${minutes}${seconds}`;\r\n    //set progressbar\r\n    progressbar.max = video.duration;\r\n});\r\n\r\nvideo.addEventListener('timeupdate', (ev) => {\r\n    progressbar.value = video.currentTime;\r\n    let videoprogress = video.currentTime / video.duration;\r\n    currentposition.style.left = `${progressbar.offsetWidth * videoprogress}px`;\r\n    let currenttimeconverted = secondsTo_hhmmss(Math.round(video.currentTime));\r\n    let hours = currenttimeconverted[0] ? currenttimeconverted[0] + \":\": \"\";\r\n    let minutes = currenttimeconverted[1] ? currenttimeconverted[1] + \":\": \"0:\";\r\n    let seconds = (currenttimeconverted[2] < 10 ? \"0\" : \"\") + currenttimeconverted[2];\r\n    time.innerHTML = `${hours}${minutes}${seconds} / ${videolength}`;\r\n});\r\n\r\nvideo.addEventListener('ended', (ev) => {\r\n    \r\n});\r\n\r\n\r\n/* --------------- SHADOW VIDEO --------------------*/\r\n//get frames for the preview from this video\r\nvar shadow = document.querySelector(\".shadow-video\");\r\n\r\n\r\n/* ------------------------------------------------\r\n       PLAYER ELEMENTS\r\n       \r\n-------------------------------------------------*/\r\n/* --------------- VIDEOSTATE  --------------------*/\r\nvar statecontainer = document.querySelector(\".video-state-container\");\r\nvar stateimg = document.querySelector(\".state-img\");\r\n\r\n\r\n/* --------------- CANVAS FOR SKIP AHEAD PREVIEW --------------------*/\r\nvar canvas = document.querySelector(\".preview-canvas\");\r\nvar canvascontext = canvas.getContext(\"2d\");\r\n\r\n\r\n/* --------------- VIDEO CONTROLS --------------------*/\r\nvar videocontrols = document.querySelector(\".video-controls\");\r\n\r\n\r\n/* ------------------------------------------------\r\n       PROGRESSBAR\r\n       \r\n-------------------------------------------------*/\r\n/* --------------- PROGRESSCONTAINER --------------------*/\r\nvar progresscontainer = document.querySelector(\".progress\");\r\n\r\n/* --------------- SKIP AHEAD --------------------*/\r\nprogresscontainer.addEventListener('mousedown', (ev) => {\r\n    let value = ev.pageX - getAbsoluteX(progressbar);\r\n    updateProgressBar(value);\r\n    progressDown = true;\r\n});\r\n\r\n/* --------------- ShOW/HIDE POSITION DOT AND PREVIEW CANVAS --------------------*/\r\nprogresscontainer.addEventListener('mouseenter', (ev) => {\r\n    currentposition.style.display = \"block\";\r\n    canvas.style.display = \"flex\";\r\n});\r\n\r\nprogresscontainer.addEventListener('mouseleave', (ev) => {\r\n    currentposition.style.display = \"none\";\r\n    canvas.style.display = \"none\";\r\n});\r\n\r\n/* --------------- SKIP AHEAD PREVIEW --------------------*/\r\nprogresscontainer.addEventListener('mousemove', (ev) => {\r\n    let value = ev.pageX - getAbsoluteX(progressbar);\r\n    \r\n    //position canvas\r\n    cvposition = value - canvas.offsetWidth/2; \r\n    cvposition = cvposition < 10 ? 10 : cvposition;\r\n    cvposition = (video.videoWidth - cvposition) < 10 + canvas.offsetWidth ? video.videoWidth - (canvas.offsetWidth + 10) : cvposition;\r\n    canvas.style.left = `${cvposition}px`;\r\n\r\n    //get frame from shadow video and paint on canvas\r\n    value = value / progressbar.offsetWidth; //percent value\r\n    let timestamp = video.duration * value;\r\n    shadow.currentTime = timestamp;\r\n    canvascontext.drawImage(shadow, 0, 0, video.videoWidth, video.videoHeight, 0, 0, canvas.width, canvas.height);\r\n});\r\n\r\n/* --------------- PROGRESSBAR --------------------*/\r\nvar progressbar = document.querySelector(\".video-progress\");\r\nvar currentposition = document.querySelector(\".current-position\");\r\n\r\n\r\n/* --------------- CONTROLS --------------------*/\r\nvar controls = document.querySelector(\".controls\");\r\n\r\n\r\n/* ------------------------------------------------\r\n       LEFT CONTROLS\r\n       \r\n-------------------------------------------------*/\r\nvar playpause = document.querySelector(\".playpause\");\r\n\r\n\r\n/* --------------- PLAY/PAUSE --------------------*/\r\nplaypause.addEventListener('click', (ev) => {\r\n    if(video.paused){\r\n        togglePlay(\"play\");\r\n    } else {\r\n        togglePlay(\"pause\");\r\n    }\r\n});\r\n\r\n\r\n/* --------------- VOLUME --------------------*/\r\nvar volumecontrol = document.querySelector(\".volume-control\")\r\n\r\n/* --------------- SHOW/HIDE VOLUMESLIDER --------------------*/\r\nvolumecontrol.addEventListener('mouseenter', (ev) => {\r\n    volumeslidercontainer.style.display = \"flex\";\r\n});\r\n\r\nvolumecontrol.addEventListener('mouseleave', (ev) => {\r\n    volumeslidercontainer.style.display = \"none\";\r\n});\r\n\r\n/* --------------- MUTE/UNMUTE VIDEO --------------------*/\r\nvar volume = document.querySelector(\".volume\");\r\n\r\nvolume.addEventListener('click', (ev) => {\r\n    if(video.muted){\r\n        toggleMute(\"unmute\");\r\n    } else {\r\n        toggleMute(\"mute\");\r\n    }\r\n});\r\n\r\n/* --------------- VOLUMESLIDER CONTAINER --------------------*/\r\nvar volumeslidercontainer = document.querySelector(\".volume-slider-container\");\r\n\r\n/* --------------- VOLUMESLIDER --------------------*/\r\nvar volumeslider = document.querySelector(\".volume-slider\");\r\n\r\n/* --------------- CHANGE VOLUME --------------------*/\r\n//click\r\nvolumeslider.addEventListener('mousedown', (ev) => {\r\n    let value = ev.pageX - getAbsoluteX(volumeslider);\r\n    value = value * 2;\r\n    updateVolume(value);\r\n});\r\n//slide\r\nvolumeslider.addEventListener('mousemove', (ev) => {\r\n    if(mouseDown){\r\n        let value = ev.pageX - getAbsoluteX(volumeslider);\r\n        value = value * 2;\r\n        updateVolume(value);\r\n    }\r\n});\r\n//scroll\r\nvolumeslider.addEventListener('wheel', (ev) => {\r\n    if(ev.deltaY < 0){\r\n        volumeslider.value = parseFloat(volumeslider.value) + 10;\r\n    } else {\r\n        volumeslider.value = volumeslider.value - 10;\r\n    }\r\n    video.volume = volumeslider.value/100;\r\n    volumesliderfill.style.width = `${volumeslider.value/2}px`;\r\n    updateVolumeIcon(volumeslider.value);\r\n})\r\n\r\n/* --------------- VOLUMESLIDER FILL --------------------*/\r\nvar volumesliderfill = document.querySelector(\".volume-slider-fill\");\r\n\r\n\r\n/* --------------- TIME --------------------*/\r\nvar time = document.querySelector(\".time-span\")\r\n\r\n/* ------------------------------------------------\r\n       RIGHT CONTROLS\r\n       \r\n-------------------------------------------------*/\r\n/* --------------- FULLSCREEN --------------------*/\r\nvar fullscreen = document.querySelector(\".fullscreen\");\r\n\r\n/* --------------- TOGGLE FULLSCREEN --------------------*/\r\nfullscreen.addEventListener('click', toggleFullScreen);\r\n\r\n/* --------------- STATE VARIABLES --------------------*/\r\nvar mouseDown = false;\r\nvar progressDown = false;\r\nvar hidecontrolstimeout;\r\nvar videolength;\r\n\r\n/* --------------- DOCUMENT --------------------*/\r\n/* --------------- SET STATE VARIABLE --------------------*/\r\ndocument.body.onmousedown = function() { \r\n    mouseDown = true;\r\n}\r\n\r\n/* --------------- \r\nRESET STATE VARIABLES + \r\nCONTINUE PLAYING AFTER DRAG OF POSITIONDOT\r\n --------------------*/\r\ndocument.body.onmouseup = function() {    \r\n    if(progressDown && !video.ended){\r\n        togglePlay(\"play\");\r\n    }\r\n    mouseDown = false;\r\n    progressDown = false;\r\n}\r\n\r\n/* --------------- UPDATE PROGRESSBAR --------------------*/\r\n//if drag started on progressbar continue on document\r\ndocument.addEventListener('mousemove', (ev) => {\r\n    if(progressDown){\r\n        if(!video.paused){\r\n            togglePlay(\"pause\");\r\n        }\r\n        currentposition.style.display = \"block\";\r\n        let value = ev.pageX - getAbsoluteX(progressbar);\r\n        updateProgressBar(value);\r\n    }\r\n});\r\n\r\n/* --------------- WINDOW --------------------*/\r\n//if drag of positiondot release it on cursor moving out of window\r\nwindow.addEventListener('mouseleave', (ev) => {\r\n    if(ev.toElement == null){\r\n        mouseDown = false;\r\n        if(progressDown && !video.ended){\r\n            togglePlay(\"play\");\r\n        }\r\n        progressDown = false;\r\n    }\r\n});\r\n\r\ndocument.addEventListener('dragstart', (ev) => {\r\n    console.log(ev);\r\n});\r\n"]}