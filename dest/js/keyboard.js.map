{"version":3,"sources":["keyboard.js"],"names":["constructor","description","shift","ctrl","action","this","keycode","KeyBoardInterface","keys","event","pressedkeys","filter","key","code","forEach","shiftKey","ctrlKey","addEventListener","window","keylistener","bind","removeEventListener","includes","push","togglePlay","Key","toggleFullScreen","video","paused","muted","console","log","ev","arrowright","volumeslider","volumesliderfill","toggleMute","src","o","volume","value","currentTime","ended","play","arrowup","parseFloat","style","width","arrowdown"],"mappings":"MAMIA,gBACSC,EAAcA,EAAnBC,EAAAC,EAAAC,GACAC,KAAKC,YAALL,EACAI,KAAKH,QAALI,EACAD,KAAAH,MAAAA,EACAG,KAAKD,KAASA,EACjBC,KAAAD,OAAAA,SAQCG,8BACUC,GACRH,KAAAG,KAAAA,cAGQC,GACJC,IAAAA,EAAcL,KAAAG,KAAUG,OAAOC,GAAnCA,EAAAN,SAAAG,EAAAI,MAQYC,EAAAA,OAAWL,EAAIM,UACvBH,EAAAT,MAAAM,EAAAO,SAIHN,EAAEI,QAAAF,IACIK,EAAAA,mBAKVC,OAAAD,iBAAA,UAAAZ,KAAAc,YAAAC,KAAAf,cAIOa,OAAAG,oBAAA,UAAAhB,KAAAc,yBAFIP,GA3BOP,KAAAG,KAAAc,SAAAV,IAkCvBP,KAAAG,KAAAe,KAAAX,IAcYY,MAAAA,EAAAA,IAAUC,IACb,gBAVT,QAcA,GAMQC,EANR,KAUUC,MAAAC,OAMOC,WAAM,QAERL,WAAA,WAYPM,EAAQC,IAAIN,IANpB,oBAUA,QAMQE,GApCJ,EAqCIK,IACIF,qBAMNG,EAAAA,IAAAA,IAMEN,cANR,QAUA,GAMQA,EACAO,KACAC,MAAAA,MAjDIC,WAAW,UAmDJC,WAAM,UAEVC,EAGA,IAAAb,IAAC,eACJc,QACH,GAjBT,EAqBA,KAMcA,QAANR,IAAeJ,OAGZO,UAAY,IAACM,IACZD,aACAZ,aAFJ,GAIIY,EACAZ,KAFGA,MAGAc,aAAA,EAACd,MAAAe,QACGL,QAAMN,IAAA,KAChBJ,MAAAgB,UAhDHV,WAAa,IAAIR,IAClB,kBACD,cACA,GACA,EACA,KACIE,MAAMc,aAAe,IAIvBG,QAAU,IAAInB,IACf,aACD,WACA,GACA,EACA,KACIE,MAAMY,OAASZ,MAAMY,QAAUZ,MAAMY,QAAU,GAAM,GAAM,GAC3DL,aAAaM,MAAQK,WAAWX,aAAaM,QAAUN,aAAaM,OAAS,GAAK,GAAK,GACvFL,iBAAiBW,MAAMC,SAAWb,aAAaM,MAAM,MAC7B,GAArBN,aAAaM,OACZD,OAAOF,IAAM,qBACbV,MAAME,OAAQ,GACa,EAArBK,aAAaM,OACnBD,OAAOF,IAAM,oBACbV,MAAME,OAAQ,GAEdU,OAAOF,IAAM,kBAKnBW,UAAY,IAAIvB,IACjB,aACD,aACA,GACA,EACA,KACIE,MAAMY,OAASZ,MAAMY,QAA0B,IAAhBZ,MAAMY,OAAgB,GAAM,GAC3DL,aAAaM,MAAQK,WAAWX,aAAaM,QAAgC,IAAtBN,aAAaM,MAAc,GAAK,GACvFL,iBAAiBW,MAAMC,SAAWb,aAAaM,MAAM,MAC7B,GAArBN,aAAaM,OACZD,OAAOF,IAAM,qBACbV,MAAME,OAAQ,GACa,EAArBK,aAAaM,OACnBD,OAAOF,IAAM,oBACbV,MAAME,OAAQ,GAEdU,OAAOF,IAAM","file":"keyboard.js","sourcesContent":["/* ------------------------------------------------\r\n       KEYCLASS\r\n       \r\n-------------------------------------------------*/\r\n\r\nclass Key{\r\n    constructor(description, keycode, shift, ctrl, action){\r\n        this.description = description;\r\n        this.keycode = keycode;\r\n        this.shift = shift;\r\n        this.ctrl = ctrl;\r\n        this.action = action\r\n    }\r\n}\r\n\r\n/* ------------------------------------------------\r\n       KEYBOARDINTERFACE\r\n       \r\n-------------------------------------------------*/\r\n\r\nclass KeyBoardInterface{\r\n    constructor(keys){\r\n        this.keys = keys;\r\n    }\r\n\r\n    keylistener(event){\r\n        let pressedkeys = this.keys.filter((key) => {\r\n            return(\r\n                key.keycode == event.code &&\r\n                key.shift == event.shiftKey &&\r\n                key.ctrl == event.ctrlKey\r\n            )\r\n        });\r\n        \r\n        pressedkeys.forEach(key => {\r\n            key.action();\r\n        });\r\n    }\r\n\r\n    start(){\r\n        window.addEventListener(\"keydown\", this.keylistener.bind(this));\r\n    }\r\n\r\n    stop(){\r\n        window.removeEventListener(\"keydown\", this.keylistener);\r\n    }\r\n\r\n    registerKey(key){\r\n        if(!this.keys.includes(key)){\r\n            this.keys.push(key);\r\n        }\r\n    }\r\n}\r\n\r\n/* ------------------------------------------------\r\n                   KEYS\r\n                   \r\n-------------------------------------------------*/\r\n\r\nconst p = new Key(\r\n    `Play or Pause`,\r\n    \"KeyP\",\r\n    false,\r\n    false,\r\n    () => {\r\n        if(video.paused){\r\n            togglePlay(\"play\");\r\n        } else {\r\n            togglePlay(\"pause\");\r\n        }\r\n    }\r\n);\r\n\r\nconst f = new Key(\r\n    `Toggle Fullscreen`,\r\n    \"KeyF\",\r\n    false,\r\n    false,\r\n    (ev) => {\r\n        toggleFullScreen();\r\n    }\r\n);\r\n\r\nconst m = new Key(\r\n    `Toggle Mute`,\r\n    \"KeyM\",\r\n    false,\r\n    false,\r\n    () => {\r\n        if(video.muted){\r\n            toggleMute(\"unmute\");\r\n        } else {\r\n            toggleMute(\"mute\");\r\n        }\r\n    }\r\n);\r\n\r\nconst o = new Key(\r\n    `Open Options`,\r\n    \"KeyO\",\r\n    false,\r\n    false,\r\n    () => {\r\n        console.log(\"o\");\r\n    }\r\n);\r\n\r\nconst arrowleft = new Key(\r\n    `Go Back 5s`,\r\n    \"ArrowLeft\",\r\n    false,\r\n    false,\r\n    () => {\r\n        video.currentTime -= 5;\r\n        if(video.ended){\r\n            console.log(\"a\");\r\n            video.play();\r\n        }\r\n    }\r\n);\r\n\r\nconst arrowright = new Key(\r\n    `Fast Forward 5s`,\r\n    \"ArrowRight\",\r\n    false,\r\n    false,\r\n    () => {\r\n        video.currentTime += 5;\r\n    }\r\n);\r\n\r\nconst arrowup = new Key(\r\n    `Volume +10`,\r\n    \"ArrowUp\",\r\n    false,\r\n    false,\r\n    () => {\r\n        video.volume = video.volume + (video.volume <= 0.9 ? 0.1 : 0);\r\n        volumeslider.value = parseFloat(volumeslider.value) + (volumeslider.value <= 90 ? 10 : 0);\r\n        volumesliderfill.style.width = `${volumeslider.value/2}px`;\r\n        if(volumeslider.value > 50){\r\n            volume.src = \"img/volumeloud.svg\";\r\n            video.muted = false;\r\n        } else if(volumeslider.value > 0) {\r\n            volume.src = \"img/volumelow.svg\";\r\n            video.muted = false;\r\n        } else {//0\r\n            volume.src = \"img/muted.svg\";\r\n        }\r\n    }\r\n);\r\n\r\nconst arrowdown = new Key(\r\n    `Volume -10`,\r\n    \"ArrowDown\",\r\n    false,\r\n    false,\r\n    () => {\r\n        video.volume = video.volume - (video.volume >= 0.1 ? 0.1 : 0);\r\n        volumeslider.value = parseFloat(volumeslider.value) - (volumeslider.value >= 10 ? 10 : 0);\r\n        volumesliderfill.style.width = `${volumeslider.value/2}px`;\r\n        if(volumeslider.value > 50){\r\n            volume.src = \"img/volumeloud.svg\";\r\n            video.muted = false;\r\n        } else if(volumeslider.value > 0) {\r\n            volume.src = \"img/volumelow.svg\";\r\n            video.muted = false;\r\n        } else {//0\r\n            volume.src = \"img/muted.svg\";\r\n        }\r\n    }\r\n);\r\n\r\n//var keyboard = new KeyBoardInterface([p, f, m, 0, arrowleft, arrowright, arrowup, arrowdown]);\r\n//keyboard.start();"]}